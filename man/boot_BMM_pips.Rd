% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boot_BMM_pips.R
\name{boot_BMM_pips}
\alias{boot_BMM_pips}
\title{Barbiero, Manzi and Mecatti \ifelse{html}{\out{&pi;}}{\eqn{\pi}}PS bootstrap}
\usage{
boot_BMM_pips(x_sample, x_pop_total, g_weights, n_boots, scheme)
}
\arguments{
\item{x_sample}{Numeric vector. Positive values of an auxiliary variable for sample elements.}

\item{x_pop_total}{Number. Sum of the auxiliary variable in the population.}

\item{g_weights}{Numeric vector. Values of weights for sample elements.
Products of \code{g_weights} and inverses of first order inclusion probabilities
are numbers of repetitions of sample elements in the pseudo-population.}

\item{n_boots}{Integer. A number of bootstrap samples to be generated.}

\item{scheme}{Function. Implementation of a sampling scheme (takes a vector
of inclusion probabilities as an argument and returns a sample: a vector of
0's and 1's of the same length as argument).}
}
\value{
Integer matrix with \code{n_boots} rows and \code{length(x_sample)}
columns. Each row is a bootstrap sample, and the number in i-th column
denotes the number of times i-th unit from the original sample occurs in
the bootstrap sample.
}
\description{
The function generates bootstrap samples using Barbiero, Manzi and Mecatti
(2015, pp. 610-611) bootstrap \ifelse{html}{\out{&pi;}}{\eqn{\pi}}PS
sampling via calibrated pseudo-population.
}
\examples{
N <- 200   # population size
x_population <- rgamma(N, 1)
n <- 10    # sample size
pi <- inclusion_probabilities_rcpp(x_population, n)
set.seed(123)
sample <- UPbrewer_rcpp(pi)
x_s <- x_population[sample == 1]
pi_s <- pi[sample == 1]
# g-weigths
g <- sampling::calib(cbind(x_s, rep(1, n)),
                     d = 1 / pi_s,
                     c(sum(x_population), N),
                     method = "truncated",
                     bounds = c(low = 0, upp = 10))
boot_BMM_pips(x_s, sum(x_population), g, 5, UPbrewer_rcpp)

}
\references{
Barbiero A., Manzi G. and Mecatti F. (2015) Bootstrapping
probability-proportional-to-size samples via calibrated empirical population.
Journal of Statistical Computation and Simulation, 85(3), 608-620.
}
