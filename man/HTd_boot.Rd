% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HTd_boot.R
\name{HTd_boot}
\alias{HTd_boot}
\title{Precision of HT estimator of the domain total}
\usage{
HTd_boot(
  y_sample,
  pi_sample,
  domain_sample,
  d,
  bootstrap_samples,
  confidence_level
)
}
\arguments{
\item{y_sample}{Numeric vector. Values of the variable of interest for sample elements.}

\item{pi_sample}{Numeric vector. Values of inclusion probabilities for sample elements.}

\item{domain_sample}{Identifiers of domains in the sample.}

\item{d}{Identifier of the domain of interest.}

\item{bootstrap_samples}{Integer matrix with \code{B} rows and \code{n} columns, where
\code{B} is the number of bootstrap replications and \code{n} is the sample size.
Each row is a bootstrap sample, and the number in i-th column denotes the
number of times i-th unit from the original sample occurs in the bootstrap sample.}

\item{confidence_level}{The assumed confidence level.}
}
\value{
A list with the following elements:
\itemize{
\item LCL_boot Lower Confidence Limit based on the quantile of bootstrapped values of the estimator.
\item UCL_boot Upper Confidence Limit based on the quantile of bootstrapped values of the estimator.
\item LCL_normboot Lower Confidence Limit based on the quantile of the standard normal distribution and the bootstrap standard error estimator.
\item UCL_normboot Upper Confidence Limit based on the quantile of the standard normal distribution and the bootstrap standard error estimator.
\item estVar_HT bootstrap variance estimator of the HT estimator of the domain total.
\item estSE_HT bootstrap standard error estimator of the HT estimator of the domain total.
\item HT: value of HT estimator of the domain total based on original sample data.
}
}
\description{
The function computes bootstrap estimators of the variance and the standard
error of Horvitz-Thompson estimator of the domain total as well as lower and
upper confidence limits.
}
\examples{
x_sample <- 1:10
y_sample <- x_sample + rnorm(10)
pi_sample <- (1:10) / 100
# First seven observations in the sample are from domain 1,
# last three observations are from domain 2:
domain_sample <- c(rep(1, 7), rep(2, 3))
set.seed(1)
bootstrap_samples <- boot_H_pips(x_sample, 1000, 4, UPbrewer_rcpp)
HTd_boot(y_sample,pi_sample,domain_sample, 2, bootstrap_samples, 0.95)
set.seed(111)
bootstrap_samples <- boot_H_pips(x_sample, 1000, 4, UPbrewer_rcpp)
bootstrap_samples
# We have obtained 0's in the first row and in the last three columns of
# 'bootstrap_samples'- the second domain (d=2) is not observed
# in the first bootstrap sample. Hence, we will obtain NA's:
HTd_boot(y_sample, pi_sample, domain_sample, 2, bootstrap_samples, 0.95)

}
